{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { projectStorage, projectFirestore, timestamp } from '../firebase/config.jsx';\n\nconst useStorage = file => {\n  _s();\n\n  const [progress, setProgress] = useState(0);\n  const [error, setError] = useState('');\n  const [url, setUrl] = useState('');\n  console.log('out', file);\n  useEffect(() => {\n    console.log('in', file);\n\n    if (file) {\n      const storageRef = projectStorage.ref(file.name);\n      const collectionRef = projectFirestore.collection('images');\n      storageRef.put(file).on('state_changed', snap => {\n        setProgress(snap.bytesTransferred / snap.totalBytes * 100);\n      }, err => {\n        setError(err);\n      }, async () => {\n        const URL = await storageRef.getDownloadURL();\n        const createdAt = timestamp();\n        collectionRef.add({\n          URL,\n          createdAt\n        });\n        setUrl(URL);\n      });\n    }\n  }, [file]);\n  return {\n    progress,\n    url,\n    error\n  };\n};\n\n_s(useStorage, \"MBAucYDrtxoiBlU3NUXFdgG3e/4=\");\n\nexport default useStorage;","map":{"version":3,"names":["useState","useEffect","projectStorage","projectFirestore","timestamp","useStorage","file","progress","setProgress","error","setError","url","setUrl","console","log","storageRef","ref","name","collectionRef","collection","put","on","snap","bytesTransferred","totalBytes","err","URL","getDownloadURL","createdAt","add"],"sources":["D:/science/mb computer/React/Photo_Gallery/Photo-Gallery/photo-gallery/src/hooks/useStorage.jsx"],"sourcesContent":["import { useState, useEffect } from 'react'\r\nimport {\r\n  projectStorage,\r\n  projectFirestore,\r\n  timestamp,\r\n} from '../firebase/config.jsx'\r\n\r\nconst useStorage = (file) => {\r\n  const [progress, setProgress] = useState(0)\r\n  const [error, setError] = useState('')\r\n  const [url, setUrl] = useState('')\r\n\r\n  console.log('out',file)\r\n\r\n  useEffect(() => {\r\n    console.log('in',file)\r\n    if (file) {\r\n      const storageRef = projectStorage.ref(file.name)\r\n      const collectionRef = projectFirestore.collection('images')\r\n\r\n      storageRef.put(file).on(\r\n        'state_changed',\r\n        (snap) => {\r\n          setProgress((snap.bytesTransferred / snap.totalBytes) * 100)\r\n        },\r\n        (err) => {\r\n          setError(err)\r\n        },\r\n        async () => {\r\n          const URL = await storageRef.getDownloadURL()\r\n          const createdAt = timestamp()\r\n          collectionRef.add({ URL, createdAt })\r\n          setUrl(URL)\r\n        },\r\n      )\r\n    }\r\n  }, [file])\r\n\r\n  return { progress, url, error }\r\n}\r\n\r\nexport default useStorage\r\n"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SACEC,cADF,EAEEC,gBAFF,EAGEC,SAHF,QAIO,wBAJP;;AAMA,MAAMC,UAAU,GAAIC,IAAD,IAAU;EAAA;;EAC3B,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,CAAD,CAAxC;EACA,MAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACW,GAAD,EAAMC,MAAN,IAAgBZ,QAAQ,CAAC,EAAD,CAA9B;EAEAa,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAkBR,IAAlB;EAEAL,SAAS,CAAC,MAAM;IACdY,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAiBR,IAAjB;;IACA,IAAIA,IAAJ,EAAU;MACR,MAAMS,UAAU,GAAGb,cAAc,CAACc,GAAf,CAAmBV,IAAI,CAACW,IAAxB,CAAnB;MACA,MAAMC,aAAa,GAAGf,gBAAgB,CAACgB,UAAjB,CAA4B,QAA5B,CAAtB;MAEAJ,UAAU,CAACK,GAAX,CAAed,IAAf,EAAqBe,EAArB,CACE,eADF,EAEGC,IAAD,IAAU;QACRd,WAAW,CAAEc,IAAI,CAACC,gBAAL,GAAwBD,IAAI,CAACE,UAA9B,GAA4C,GAA7C,CAAX;MACD,CAJH,EAKGC,GAAD,IAAS;QACPf,QAAQ,CAACe,GAAD,CAAR;MACD,CAPH,EAQE,YAAY;QACV,MAAMC,GAAG,GAAG,MAAMX,UAAU,CAACY,cAAX,EAAlB;QACA,MAAMC,SAAS,GAAGxB,SAAS,EAA3B;QACAc,aAAa,CAACW,GAAd,CAAkB;UAAEH,GAAF;UAAOE;QAAP,CAAlB;QACAhB,MAAM,CAACc,GAAD,CAAN;MACD,CAbH;IAeD;EACF,CAtBQ,EAsBN,CAACpB,IAAD,CAtBM,CAAT;EAwBA,OAAO;IAAEC,QAAF;IAAYI,GAAZ;IAAiBF;EAAjB,CAAP;AACD,CAhCD;;GAAMJ,U;;AAkCN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}