{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { projectStorage, projectFirestore, timestamp } from '../firebase/config.jsx';\n\nconst useStorage = file => {\n  _s();\n\n  const [progress, setProgress] = useState(0);\n  const [error, setError] = useState('');\n  const [url, setUrl] = useState('');\n  useEffect(() => {\n    const storageRef = projectStorage.ref(file.name);\n    const collectionRef = projectFirestore.collection('images');\n    storageRef.put(file).on('state_changed', snap => {\n      setProgress(snap.bytesTransferred / snap.totalBytes * 100);\n    }, err => {\n      setError(err);\n    }, async () => {\n      const URL = await storageRef.getDownloadURL();\n      const createdAt = timestamp();\n      collectionRef.add({\n        URL,\n        createdAt\n      });\n      setUrl(URL);\n    });\n  }, [file]);\n  return {\n    progress,\n    url\n  };\n};\n\n_s(useStorage, \"MBAucYDrtxoiBlU3NUXFdgG3e/4=\");\n\nexport default useStorage;","map":{"version":3,"names":["useState","useEffect","projectStorage","projectFirestore","timestamp","useStorage","file","progress","setProgress","error","setError","url","setUrl","storageRef","ref","name","collectionRef","collection","put","on","snap","bytesTransferred","totalBytes","err","URL","getDownloadURL","createdAt","add"],"sources":["D:/science/mb computer/React/Photo_Gallery/Photo-Gallery/photo-gallery/src/hooks/useStorage.jsx"],"sourcesContent":["import { useState, useEffect } from 'react'\r\nimport {\r\n  projectStorage,\r\n  projectFirestore,\r\n  timestamp,\r\n} from '../firebase/config.jsx'\r\n\r\nconst useStorage = (file) => {\r\n  const [progress, setProgress] = useState(0)\r\n  const [error, setError] = useState('')\r\n  const [url, setUrl] = useState('')\r\n\r\n  useEffect(() => {\r\n    const storageRef = projectStorage.ref(file.name)\r\n    const collectionRef = projectFirestore.collection('images')\r\n\r\n    storageRef.put(file).on(\r\n      'state_changed',\r\n      (snap) => {\r\n        setProgress((snap.bytesTransferred / snap.totalBytes) * 100)\r\n      },\r\n      (err) => {\r\n        setError(err)\r\n      },\r\n      async () => {\r\n        const URL = await storageRef.getDownloadURL()\r\n        const createdAt = timestamp()\r\n\r\n        collectionRef.add({ URL, createdAt })\r\n        setUrl(URL)\r\n      },\r\n    )\r\n  }, [file])\r\n\r\n  return { progress, url }\r\n}\r\n\r\nexport default useStorage\r\n"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SACEC,cADF,EAEEC,gBAFF,EAGEC,SAHF,QAIO,wBAJP;;AAMA,MAAMC,UAAU,GAAIC,IAAD,IAAU;EAAA;;EAC3B,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,CAAD,CAAxC;EACA,MAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACW,GAAD,EAAMC,MAAN,IAAgBZ,QAAQ,CAAC,EAAD,CAA9B;EAEAC,SAAS,CAAC,MAAM;IACd,MAAMY,UAAU,GAAGX,cAAc,CAACY,GAAf,CAAmBR,IAAI,CAACS,IAAxB,CAAnB;IACA,MAAMC,aAAa,GAAGb,gBAAgB,CAACc,UAAjB,CAA4B,QAA5B,CAAtB;IAEAJ,UAAU,CAACK,GAAX,CAAeZ,IAAf,EAAqBa,EAArB,CACE,eADF,EAEGC,IAAD,IAAU;MACRZ,WAAW,CAAEY,IAAI,CAACC,gBAAL,GAAwBD,IAAI,CAACE,UAA9B,GAA4C,GAA7C,CAAX;IACD,CAJH,EAKGC,GAAD,IAAS;MACPb,QAAQ,CAACa,GAAD,CAAR;IACD,CAPH,EAQE,YAAY;MACV,MAAMC,GAAG,GAAG,MAAMX,UAAU,CAACY,cAAX,EAAlB;MACA,MAAMC,SAAS,GAAGtB,SAAS,EAA3B;MAEAY,aAAa,CAACW,GAAd,CAAkB;QAAEH,GAAF;QAAOE;MAAP,CAAlB;MACAd,MAAM,CAACY,GAAD,CAAN;IACD,CAdH;EAgBD,CApBQ,EAoBN,CAAClB,IAAD,CApBM,CAAT;EAsBA,OAAO;IAAEC,QAAF;IAAYI;EAAZ,CAAP;AACD,CA5BD;;GAAMN,U;;AA8BN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}